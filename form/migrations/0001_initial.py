# Generated by Django 6.0.dev20250909062341 on 2025-09-10 01:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Related",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("char", models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name="BaseModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("char", models.CharField(max_length=1000)),
                ("text", models.TextField(blank=True, max_length=128, null=True)),
                (
                    "choice",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("one", "One"),
                            ("two", "Two"),
                            (
                                "three",
                                "very long long long long long long long long long long long long long long long long long long long long long choice",
                            ),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                ("slug", models.SlugField(blank=True, max_length=128, null=True)),
                ("integer", models.IntegerField(blank=True, null=True)),
                ("boolean", models.BooleanField(default=False)),
                ("datetime", models.DateTimeField(blank=True, null=True)),
                ("file", models.FileField(blank=True, null=True, upload_to="")),
                (
                    "fk",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="form.basemodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomWidget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("char", models.CharField(max_length=128)),
                ("file", models.FileField(upload_to="")),
                (
                    "not_required_file",
                    models.FileField(blank=True, null=True, upload_to=""),
                ),
                ("url", models.URLField()),
                ("time", models.TimeField()),
                ("date", models.DateField()),
                ("datetime", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="FieldError",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("char", models.CharField(max_length=128)),
                ("datetime", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="AutoComplete",
            fields=[
                (
                    "related_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="form.related",
                    ),
                ),
            ],
            bases=("form.related",),
        ),
        migrations.CreateModel(
            name="RawID",
            fields=[
                (
                    "related_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="form.related",
                    ),
                ),
            ],
            bases=("form.related",),
        ),
        migrations.CreateModel(
            name="Common",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="form.basemodel",
                    ),
                ),
            ],
            bases=("form.basemodel",),
        ),
        migrations.CreateModel(
            name="HelpText",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="form.basemodel",
                    ),
                ),
            ],
            bases=("form.basemodel",),
        ),
        migrations.CreateModel(
            name="Prepopulated",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="form.basemodel",
                    ),
                ),
            ],
            bases=("form.basemodel",),
        ),
        migrations.CreateModel(
            name="ReadOnly",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="form.basemodel",
                    ),
                ),
            ],
            bases=("form.basemodel",),
        ),
        migrations.CreateModel(
            name="VerboseName",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="form.basemodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Verbose Name",
                "verbose_name_plural": "Verbose Name Plural",
            },
            bases=("form.basemodel",),
        ),
        migrations.CreateModel(
            name="Fieldset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("char", models.CharField(max_length=128)),
                (
                    "choice",
                    models.CharField(
                        choices=[("one", "One"), ("two", "Two"), ("three", "Three")],
                        max_length=10,
                    ),
                ),
                (
                    "not_required_file",
                    models.FileField(blank=True, null=True, upload_to=""),
                ),
                ("datetime", models.DateTimeField()),
                ("m2m", models.ManyToManyField(blank=True, to="form.fieldset")),
            ],
        ),
        migrations.AddField(
            model_name="related",
            name="fk",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="fk_common",
                to="form.common",
            ),
        ),
        migrations.AddField(
            model_name="related",
            name="m2m",
            field=models.ManyToManyField(
                blank=True, related_name="mtm_common", to="form.common"
            ),
        ),
        migrations.AddField(
            model_name="related",
            name="o2o",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="form.common",
            ),
        ),
        migrations.CreateModel(
            name="AllManyToMany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("char", models.CharField(max_length=128)),
                (
                    "m2m_1",
                    models.ManyToManyField(
                        blank=True, related_name="mtm1", to="form.common"
                    ),
                ),
                (
                    "m2m_2",
                    models.ManyToManyField(
                        blank=True, related_name="mtm2", to="form.common"
                    ),
                ),
                (
                    "m2m_3",
                    models.ManyToManyField(
                        blank=True, related_name="mtm3", to="form.common"
                    ),
                ),
            ],
            options={
                "verbose_name": "All ManyToMany",
            },
        ),
    ]
